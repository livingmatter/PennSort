-----------------
Using SpikeSort.m
-----------------

The main file which controls all the different spike sorting stages is SpikeSort.m. It is organized using MATLAB's cell mode, so the idea is to advance through the cells one at a time to perform the different steps in the process.

At top there is a list of parameters, some of which will need to be changed for each spike sorting session. Many of them are described in "Installation.txt." The remaining ones, which will change from run to run, are described here: 
	datadir is the directory containing the raw data files.
	outputdir is where to put the spike times.
	clusterdir is where to put the clustered data.
	infileprefix is the prefix of the raw data files. The code assumes that they are named "infileprefix1"..."infileprefixN", and that consecutively 		      numbered files correspond to contiguously recorded data.
	clustfiles is a list of which raw data files to use in clustering. Choose ~2 min of data, spread uniformly throughout the experiment.
	noisefile is the data file used to get statistics on the noise. By default it is the first clustfile, and this probably doesn't need to be changed.
	fitfiles is the list of raw data files from which to get spike times.

The clustering code outputs to clusterdir:
	One "Cluster*.mat" file for each cluster. It contains a matrix, "C", with all the events in the cluster. "mCluster*.mat" is analogous for the merged 	clusters, and "mmCluster*.mat" for the second round of merging.

	"TemplateMatrix.mat" contains all the templates.
	"Stats.mat" contains parameters of the priors for each template.

The fitting code outputs to outputdir:
	One "ST__*" file for each raw data file. It contains "SpikeTimes," a cell array each of whose entries is the list of spike times (in samples) for the 	corresponding cluster, "amplist," a cell array whose entries are lists of amplitude scale factors for each fit of the corresponding template, and 	"stats," which gives the priors used in fitting that raw data file.
	
	"SpikeTimes" is of course the main output of the code. The other things can be useful for diagnostic purposes.


----------------------------------
Using the clustering GUI (plots.m)
----------------------------------

After running OPTICS, SpikeSort.m saves the ordered events to a file prefixed by "DataToCluster_", placed in the specified cluster directory.
Load this file with File -> Open from .mat

The different events run horizontally. The waveforms on all channels are laid out vertically, with the clips from different channels concatenated together. The color gives the potential. You are looking for horizontal bands, representing a group of events that all peak at the same place with similar amplitude.

You interact with the GUI through the buttons on the toolbar. You can zoom in, zoom out, and pan horizontally with the magnifying glass and hand buttons.

To mark cluster boundaries, use the button with the empty box icon. Click once on the main screen where you want to start the cluster and once again where you want it to end. The region you marked off will become shaded. You can mark as many clusters in this way as you'd like; press the space bar when you want to stop. Note that each shaded region corresponds to a distinct cluster: you cannot mark disconnected clusters. Sometimes there are disconnected regions that obviously belong to the same cluster. Don't worry about this: mark them as separate clusters and you'll be able to merge them in the subsequent step.

To delete a cluster, click the icon with a box and an X, then click the cluster you want to remove.

The green arrow icons play movies of the events in a cluster but they're currently broken for arrays other than ours.

When done, you may use File -> Save Cluster Boundaries to save your work as a .clu file. There is also a corresponding "Open cluster boundaries." Close the GUI to advance SpikeSort to the next step.


----------------
Merging clusters
----------------

The code will display pairs of overlapping templates in a new window. If you think they match well enough that the corresponding clusters should be merged, type 'y' at the MATLAB command line. If you don't want them merged, just hit enter to see the next one. The merged clusters are stored in files called "mCluster*.mat" in the specified cluster directory.


------------------------------------------------
Using the cluster splitting GUI (clustersplit.m)
------------------------------------------------

When it first opens you'll get a file dialog box. Navigate to the cluster directory and select any one of the "mCluster" files.

Use the drop down menu at the upper-left to select which cluster you want to view. The arrow buttons (">" and "<") can also be used to move through this list. "Update plots" will display the events in the cluster. Select whether you want to see all the events or just their median with the radio buttons.

You're looking for channels on which there seem to be distinct subclusters. You'll see plenty of scatter, especially on channels far from the peak in the median. This is not important. What matters is whether the peak channel, or its near neighbors, doesn't look coherent. 

If a channel looks suspicious, click on it. The channel number should appear in the text box at the upper right. Then click "Histogram PC" to see a histogram of principal component weights on that channel. You can look at different principal components by using the arrow buttons or the drop-down menu. If a PC looks multimodal, the cluster should probably be split.

Click "Cut" to draw a threshold on the PC histogram. The cursor should change to crosshairs (there is a bug where this doesn't always happen) and you can click where on the histogram you'd like to place the threshold (that is, if the histogram is bimodal you want to click on the valley between the two peaks). You'll see a red line on the histogram where you clicked.

Click "Show L" and the main display will update to only show those events that fall to the left of the threshold. Similarly, "Show R" will show only those events that fall to the right. Inspect both of these, and if they really do look like distinct clusters, click "Save as new cluster." This will remove the currently displayed events from the cluster and place them in a new "mCluster" file at the end of the list.

If you don't want to split the cluster you can always click "Update plots" to see all the events again.


